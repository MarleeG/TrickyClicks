{"ast":null,"code":"var _jsxFileName = \"/Users/ChristinaGerard/Desktop/personal_projects/TrickyClicks/src/App.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap'; // Character Images\n\nimport Poca from './images/characters/poca.jpg';\nimport JSmith from './images/characters/john_smith.jpg';\nimport Meeko from './images/characters/meeko.jpg';\nimport Flit from './images/characters/flit.jpg';\nimport GMWillow from './images/characters/gma_willow.jpg';\nimport PHatan from './images/characters/powhatan.jpg';\nimport Nakoma from './images/characters/nakoma.jpg';\nimport Percy from './images/characters/percy.jpg';\nimport Kocoum from './images/characters/kocoum.jpg';\nimport './App.css'; // Components\n\nimport Header from './components/header';\nimport Characters from './components/characters';\nconst log = console.log;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      characters: [{\n        alt: 'Pocahontas',\n        src: Poca,\n        clicked: false\n      }, {\n        alt: 'John Smith',\n        src: JSmith,\n        clicked: false\n      }, {\n        alt: 'Meeko',\n        src: Meeko,\n        clicked: false\n      }, {\n        alt: 'Flit',\n        src: Flit,\n        clicked: false\n      }, {\n        alt: 'Grandmother Willow',\n        src: GMWillow,\n        clicked: false\n      }, {\n        alt: 'Powhatan',\n        src: PHatan,\n        clicked: false\n      }, {\n        alt: 'Nakoma',\n        src: Nakoma,\n        clicked: false\n      }, {\n        alt: 'Percy',\n        src: Percy,\n        clicked: false\n      }, {\n        alt: 'Kocoum',\n        src: Kocoum,\n        clicked: false\n      }]\n    };\n\n    this.generateNewCharacterOrder = character_array => {\n      log('character array: ', character_array); // assign the value of the character_array to characters_copy\n      // let characters_copy = character_array;\n      // character_array = [{alt: '', src: '', clicked: bool}]\n\n      let new_character_order = []; // indices that have been chosen already\n\n      let index_tracker = []; // While the length of the index_tracker is less than or equal to 10\n\n      while (index_tracker.length >= 10) {\n        // Generates a random whole number between 0-9\n        let random_idx = Math.floor(Math.random() * 10); // if the random index chosen does not exist,\n\n        if (index_tracker.indexOf(random_idx) === -1) {\n          // then push it to the index_tracker array\n          index_tracker.push(random_idx);\n        }\n      }\n\n      if (index_tracker.length === 10) {\n        index_tracker.forEach(idx => {\n          new_character_order = [...new_character_order, character_array[idx]];\n        });\n      }\n\n      log(new_character_order); // characters_copy.forEach((item, idx) => {\n      //   let random_idx = Math.floor(Math.random() * 10)\n      //   // log(random_idx)\n      //   while(index_tracker.indexOf(random_idx) === -1 && index_tracker.length >= 10){\n      //     index_tracker.push(random_idx);\n      //     if(index_tracker.length === 10){\n      //     }\n      //   }\n      // });\n    };\n  }\n\n  render() {\n    this.generateNewCharacterOrder(this.state.characters);\n    return React.createElement(\"div\", {\n      className: \"app_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Characters, {\n      characters: this.state.characters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ChristinaGerard/Desktop/personal_projects/TrickyClicks/src/App.js"],"names":["React","Component","Row","Col","Container","Poca","JSmith","Meeko","Flit","GMWillow","PHatan","Nakoma","Percy","Kocoum","Header","Characters","log","console","App","state","characters","alt","src","clicked","generateNewCharacterOrder","character_array","new_character_order","index_tracker","length","random_idx","Math","floor","random","indexOf","push","forEach","idx","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\n\n// Character Images\nimport Poca from './images/characters/poca.jpg';\nimport JSmith from './images/characters/john_smith.jpg';\nimport Meeko from './images/characters/meeko.jpg';\nimport Flit from './images/characters/flit.jpg';\nimport GMWillow from './images/characters/gma_willow.jpg';\nimport PHatan from './images/characters/powhatan.jpg';\nimport Nakoma from './images/characters/nakoma.jpg';\nimport Percy from './images/characters/percy.jpg';\nimport Kocoum from './images/characters/kocoum.jpg';\n\n\nimport './App.css';\n\n// Components\nimport Header from './components/header';\nimport Characters from './components/characters';\n\nconst log = console.log;\n\nclass App extends Component {\n  \n  state = {\n    characters: [\n      {alt: 'Pocahontas', src: Poca, clicked: false},\n      {alt: 'John Smith', src: JSmith, clicked: false},\n      {alt: 'Meeko', src: Meeko, clicked: false},\n      {alt: 'Flit', src: Flit, clicked: false},\n      {alt: 'Grandmother Willow', src: GMWillow, clicked: false},\n      {alt: 'Powhatan', src: PHatan, clicked: false},\n      {alt: 'Nakoma', src: Nakoma, clicked: false},\n      {alt: 'Percy', src: Percy, clicked: false},\n      {alt: 'Kocoum', src: Kocoum, clicked: false},\n    ]\n  }\n\n  generateNewCharacterOrder = character_array => {\n    log('character array: ', character_array)\n    // assign the value of the character_array to characters_copy\n    // let characters_copy = character_array;\n    // character_array = [{alt: '', src: '', clicked: bool}]\n    let new_character_order = [];\n\n    // indices that have been chosen already\n    let index_tracker = [];\n\n    // While the length of the index_tracker is less than or equal to 10\n    while(index_tracker.length >= 10){\n      // Generates a random whole number between 0-9\n      let random_idx = Math.floor(Math.random() * 10)\n\n      // if the random index chosen does not exist,\n      if(index_tracker.indexOf(random_idx) === -1){\n      // then push it to the index_tracker array\n        index_tracker.push(random_idx);\n      }\n    }\n\n    if(index_tracker.length === 10){\n      index_tracker.forEach(idx => {\n        new_character_order = [...new_character_order, character_array[idx]]\n      })\n    }\n\n    log(new_character_order)\n\n    // characters_copy.forEach((item, idx) => {\n    //   let random_idx = Math.floor(Math.random() * 10)\n    //   // log(random_idx)\n    //   while(index_tracker.indexOf(random_idx) === -1 && index_tracker.length >= 10){\n    //     index_tracker.push(random_idx);\n    //     if(index_tracker.length === 10){\n    //     }\n    //   }\n    // });\n  }\n\n  \n\n  render() {\n    this.generateNewCharacterOrder(this.state.characters);\n\n    return (\n      <div className=\"app_container\">\n        <Container>\n          <Row>\n            <Col lg={12}>\n              <Header />\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={12}>\n              <Characters characters={this.state.characters}/>\n            </Col>\n          </Row>\n          \n        \n        </Container>\n        \n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}